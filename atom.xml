<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>xzml 的个人 Wiki</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-11-26T15:31:17.017Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>xzml</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>编程资源汇总</title>
    <link href="http://yoursite.com/wiki/%E7%BD%91%E7%BB%9C%E8%B5%84%E6%BA%90/%E7%BC%96%E7%A8%8B%E8%B5%84%E6%BA%90%E6%B1%87%E6%80%BB/"/>
    <id>http://yoursite.com/wiki/网络资源/编程资源汇总/</id>
    <published>2018-11-26T15:25:18.000Z</published>
    <updated>2018-11-26T15:31:17.017Z</updated>
    
    <content type="html"><![CDATA[<h2 id="编程资源总结"><a href="#编程资源总结" class="headerlink" title="编程资源总结"></a>编程资源总结</h2><ul><li><a href="https://github.com/justjavac/free-programming-books-zh_CN" rel="external nofollow noopener noreferrer" target="_blank">Github: 免费的编程中文书籍索引</a></li><li><a href="https://www.jianshu.com/p/e553b1d00501" rel="external nofollow noopener noreferrer" target="_blank">简书: 程序员书籍汇总下载</a></li><li><a href="https://github.com/china-testing/python-api-tesing" rel="external nofollow noopener noreferrer" target="_blank">Github: python中文库-python人工智能大数据自动化接口测试开发</a></li><li><a href="https://github.com/mbeyeler/opencv-machine-learning" rel="external nofollow noopener noreferrer" target="_blank">Github: Machine Learning for OpenCV</a></li></ul><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><blockquote><ul><li><a href=""></a></li><li><a href=""></a></li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;编程资源总结&quot;&gt;&lt;a href=&quot;#编程资源总结&quot; class=&quot;headerlink&quot; title=&quot;编程资源总结&quot;&gt;&lt;/a&gt;编程资源总结&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/justjavac/free-progr
      
    
    </summary>
    
      <category term="网络资源" scheme="http://yoursite.com/categories/%E7%BD%91%E7%BB%9C%E8%B5%84%E6%BA%90/"/>
    
    
      <category term="Resource" scheme="http://yoursite.com/tags/Resource/"/>
    
  </entry>
  
  <entry>
    <title>vim技巧</title>
    <link href="http://yoursite.com/wiki/%E6%8A%80%E6%9C%AF%E5%BC%80%E5%8F%91/Unix/Vim/vim%E6%8A%80%E5%B7%A7/"/>
    <id>http://yoursite.com/wiki/技术开发/Unix/Vim/vim技巧/</id>
    <published>2018-11-26T15:11:51.000Z</published>
    <updated>2018-11-26T15:22:31.770Z</updated>
    
    <content type="html"><![CDATA[<h2 id="调整窗口的高度和宽度"><a href="#调整窗口的高度和宽度" class="headerlink" title="调整窗口的高度和宽度"></a>调整窗口的高度和宽度</h2><p>参考博客 1. 其中使用 <code>c-w, &gt;</code> 和 <code>c-w, &lt;</code> 最为方便.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">CTRL-W =        使得所有窗口 (几乎) 等宽、等高，但当前窗口使用 <span class="string">'winheight'</span> 和 <span class="string">'winwidth'</span>。</span><br><span class="line"></span><br><span class="line">:res[ize] -N                               </span><br><span class="line">CTRL-W -        使得当前窗口高度减 N (默认值是 1)。如果在 <span class="string">'vertical'</span> 之后使用，则使得宽度减 N。</span><br><span class="line"></span><br><span class="line">:res[ize] +N                                    </span><br><span class="line">CTRL-W +        使得当前窗口高度加 N (默认值是 1)。如果在 <span class="string">'vertical'</span> 之后使用，则使得宽度加 N。</span><br><span class="line"></span><br><span class="line">:res[ize] [N]</span><br><span class="line">CTRL-W CTRL-_                                  </span><br><span class="line">CTRL-W _        设置当前窗口的高度为 N (默认值为最大可能高度)。</span><br><span class="line"></span><br><span class="line">:vertical res[ize] [N]                  </span><br><span class="line">CTRL-W |        设置当前窗口的宽度为 N (默认值为最大可能宽度)。</span><br><span class="line"></span><br><span class="line">z&#123;nr&#125;&lt;CR&gt;       设置当前窗口的高度为 &#123;nr&#125;。</span><br><span class="line">                                           </span><br><span class="line">CTRL-W &lt;        使得当前窗口宽度减 N (默认值是 1)。                                              </span><br><span class="line">CTRL-W &gt;        使得当前窗口宽度加 N (默认值是 1)。</span><br></pre></td></tr></table></figure><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><blockquote><ul><li><a href="https://www.cnblogs.com/xuechao/archive/2011/03/29/1999292.html" rel="external nofollow noopener noreferrer" target="_blank">vim: vs sp 调整窗口高度和宽度</a></li><li><a href=""></a></li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;调整窗口的高度和宽度&quot;&gt;&lt;a href=&quot;#调整窗口的高度和宽度&quot; class=&quot;headerlink&quot; title=&quot;调整窗口的高度和宽度&quot;&gt;&lt;/a&gt;调整窗口的高度和宽度&lt;/h2&gt;&lt;p&gt;参考博客 1. 其中使用 &lt;code&gt;c-w, &amp;gt;&lt;/code&gt; 和 
      
    
    </summary>
    
      <category term="技术开发" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF%E5%BC%80%E5%8F%91/"/>
    
      <category term="Unix" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF%E5%BC%80%E5%8F%91/Unix/"/>
    
      <category term="Vim" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF%E5%BC%80%E5%8F%91/Unix/Vim/"/>
    
    
      <category term="Unix" scheme="http://yoursite.com/tags/Unix/"/>
    
      <category term="Vim" scheme="http://yoursite.com/tags/Vim/"/>
    
  </entry>
  
  <entry>
    <title>稀疏表示去噪</title>
    <link href="http://yoursite.com/wiki/%E4%B8%93%E4%B8%9A%E7%A0%94%E7%A9%B6/%E7%A8%80%E7%96%8F%E8%A1%A8%E7%A4%BA%E5%8E%BB%E5%99%AA/"/>
    <id>http://yoursite.com/wiki/专业研究/稀疏表示去噪/</id>
    <published>2018-11-26T14:00:14.000Z</published>
    <updated>2018-11-26T14:56:17.343Z</updated>
    
    <content type="html"><![CDATA[<h2 id="稀疏表示能去噪的原因"><a href="#稀疏表示能去噪的原因" class="headerlink" title="稀疏表示能去噪的原因"></a>稀疏表示能去噪的原因</h2><p>下面的论述来自参考博客一.</p><blockquote><p>可以认为含噪（观测）图像是由无噪（原始）图像和噪声合成的图像，而观测图像被认为是可稀疏的，即可以通过有限个原子来表示，而噪声是随机的不可稀疏的，即不可以通过有限个原子表示，因此通过观测图像去提取图像的系数成分，再用这些稀疏成分来重构图像，在这个过程中，噪声被处理为观测图像和重构图像之间的残差，在重构过程中残差被丢弃，从而达到去噪的效果。<br>稀疏表示又称为稀疏编码，这个过程可以被视为特征提取的过程，可以看作把目标信号投影到一组非正交的基构成的空间中，而在每个基上投影的系数，就是稀疏编码。这组非正交的基向量中，每一个基向量被称为一个原子，这些原子（列向量）可以构成一个超完备的字典。<br>那么，为什么要使用过完备的字典，或者说要在非正交的空间进行投影呢？<br>对于一组正交基而言，它们可以准确而唯一地表示空间中的任何向量，而且这些向量间没有冗余（因为正交），正式因为严格的正交限制，因此正交基的展开简单，但是稀疏性不够理想，因为严格正交的基往往只能表示图像的某一个特征而不能够同时表示其他特征，因此正交基的稀疏性不及非正交基(过完备字典).</p></blockquote><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><blockquote><ul><li><a href="https://blog.csdn.net/tongdanping/article/details/79162547" rel="external nofollow noopener noreferrer" target="_blank">稀疏表示去噪的理解</a></li><li><a href=""></a></li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;稀疏表示能去噪的原因&quot;&gt;&lt;a href=&quot;#稀疏表示能去噪的原因&quot; class=&quot;headerlink&quot; title=&quot;稀疏表示能去噪的原因&quot;&gt;&lt;/a&gt;稀疏表示能去噪的原因&lt;/h2&gt;&lt;p&gt;下面的论述来自参考博客一.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;可以认为
      
    
    </summary>
    
      <category term="专业研究" scheme="http://yoursite.com/categories/%E4%B8%93%E4%B8%9A%E7%A0%94%E7%A9%B6/"/>
    
    
      <category term="专业研究" scheme="http://yoursite.com/tags/%E4%B8%93%E4%B8%9A%E7%A0%94%E7%A9%B6/"/>
    
  </entry>
  
  <entry>
    <title>Git多用户</title>
    <link href="http://yoursite.com/wiki/%E6%9F%90%E4%BA%9BTricks/Git%E5%A4%9A%E7%94%A8%E6%88%B7/"/>
    <id>http://yoursite.com/wiki/某些Tricks/Git多用户/</id>
    <published>2018-11-25T15:29:18.000Z</published>
    <updated>2018-11-26T13:54:59.267Z</updated>
    
    <content type="html"><![CDATA[<h2 id="设置-SSH"><a href="#设置-SSH" class="headerlink" title="设置 SSH"></a>设置 SSH</h2><p>使用 <code>ssh-keygen</code> 产生新的秘钥, 然后将 <code>.pub</code> 放到 Github 上. 之后修改 <code>.ssh/config</code> 文件, 设置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Host xzml</span><br><span class="line">    HostName github.com</span><br><span class="line">    User git</span><br><span class="line">    IdentityFile ~/.ssh/id_rsa_xzml</span><br></pre></td></tr></table></figure><p>最后使用 <code>ssh -T xzml</code> 对 Github 进行访问, 如果成功的话, 会返回:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hi xzml! You<span class="string">'ve successfully authenticated, but GitHub does not provide shell access.</span></span><br></pre></td></tr></table></figure><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><blockquote><ul><li><a href=""></a></li><li><a href=""></a></li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;设置-SSH&quot;&gt;&lt;a href=&quot;#设置-SSH&quot; class=&quot;headerlink&quot; title=&quot;设置 SSH&quot;&gt;&lt;/a&gt;设置 SSH&lt;/h2&gt;&lt;p&gt;使用 &lt;code&gt;ssh-keygen&lt;/code&gt; 产生新的秘钥, 然后将 &lt;code&gt;.pub&lt;/cod
      
    
    </summary>
    
      <category term="某些Tricks" scheme="http://yoursite.com/categories/%E6%9F%90%E4%BA%9BTricks/"/>
    
    
      <category term="Tricks" scheme="http://yoursite.com/tags/Tricks/"/>
    
  </entry>
  
  <entry>
    <title>Mac下使用Hexo+Github搭建个人博客</title>
    <link href="http://yoursite.com/wiki/%E6%9F%90%E4%BA%9BTricks/Mac%E4%B8%8B%E4%BD%BF%E7%94%A8Hexo-Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>http://yoursite.com/wiki/某些Tricks/Mac下使用Hexo-Github搭建个人博客/</id>
    <published>2018-11-25T14:58:43.000Z</published>
    <updated>2018-11-26T13:49:45.664Z</updated>
    
    <content type="html"><![CDATA[<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>建议看看参考博客中的第一个, 图文并茂, 可以感受到很多细节, 作者非常用心, 第二个参考博客是更新奇的内容, 包括插入图片, 购买域名等.</p><h3 id="安装-Nodejs-和-npm"><a href="#安装-Nodejs-和-npm" class="headerlink" title="安装 Nodejs 和 npm"></a>安装 Nodejs 和 npm</h3><p>Hexo 是用 Nodejs 写成了, 所以需要先安装 Nodejs 和 npm, 推荐使用 Homebrew 安装. 安装完 Nodejs 后建议设置 <a href="http://npm.taobao.org/" rel="external nofollow noopener noreferrer" target="_blank">npm 淘宝镜像</a>.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">brew install node</span><br><span class="line">npm config <span class="built_in">set</span> registry https://registry.npm.taobao.org --global</span><br><span class="line">npm config <span class="built_in">set</span> disturl https://npm.taobao.org/dist --global</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看版本号</span></span><br><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure><h3 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看版本号</span></span><br><span class="line">hexo -v</span><br></pre></td></tr></table></figure><h3 id="本地调试"><a href="#本地调试" class="headerlink" title="本地调试"></a>本地调试</h3><p>创建某个目录用于存放你的博客, 比如我创建了 <code>PWiki/</code> 文件夹用于存放博客相关的文件, 然后执行如下命令:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">hexo init <span class="comment"># 首先初始化 Hexo, 会将相关的文件从 Github 上下载下来, 默认使用 landscape 主题</span></span><br><span class="line">npm install <span class="comment"># 在部署博客之前需要安装依赖项, 我想这个命令会直接读取 PWiki/package.json 文件中的内容</span></span><br><span class="line">hexo generate <span class="comment"># 生成静态页面, Hexo 是一个博客框架, 只有执行了 generate 命令才能生成具体的 html, css 等文件</span></span><br><span class="line">hexo server <span class="comment"># 启动服务, 用于本地调试</span></span><br><span class="line">hexo clean <span class="comment"># 可以清除已经产生的静态页面, 如 PWiki/publish 目录</span></span><br><span class="line">hexo new <span class="comment"># 创建新博客</span></span><br></pre></td></tr></table></figure><ul><li>本地打开 <code>http://localhost:4000</code> 进行效果查看</li><li>命令缩写:</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo generate <span class="comment"># 缩写 hexo g</span></span><br><span class="line">hexo server <span class="comment"># 缩写 hexo s</span></span><br><span class="line">hexo new <span class="comment"># 缩写 hexo n</span></span><br></pre></td></tr></table></figure><h2 id="部署到-Github"><a href="#部署到-Github" class="headerlink" title="部署到 Github"></a>部署到 Github</h2><ol><li>首先在 Github 上创建名为 <code>&lt;user&gt;.github.io</code> 的 repository, 我的 <code>&lt;user&gt;</code> 就是 <code>xzml</code>.</li><li>然后在 <code>PWiki/_config.yml</code> 文件的 <code>deploy</code> 项下, 增加如下内容:</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repository: git@github.com:xzml/xzml.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><ol start="3"><li>安装 Github 部署器:</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>否则应该会出现 <code>ERROR Deployer not found: git</code> 错误.</p><ol start="4"><li>将静态博客部署到 Github 上:</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo deploy <span class="comment"># 缩写 hexo d</span></span><br></pre></td></tr></table></figure><h2 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h2><p>按照 <a href="https://github.com/zthxxx/hexo-theme-Wikitten" rel="external nofollow noopener noreferrer" target="_blank">https://github.com/zthxxx/hexo-theme-Wikitten</a> 中的 <code>README.md</code> 操作就可以了.</p><p>大致思路就是:</p><ul><li>从 Github 上将主题下载到 <code>PWiki/</code> 下的 <code>themes</code> 目录下</li><li>修改 <code>PWiki/themes/Wikitten/_config.yml</code> 文件, 对主题进行配置</li><li>修改 <code>PWiki/_config.yml</code> 文件, 对项目进行配置, 比如将 <code>theme</code> 这一项更改为 <code>Wikitten</code>.</li></ul><p>另外需要注意的是 Wikitten 主题需要额外的一些插件, <code>README.md</code> 中写了, 为了安装它们, 我在 <code>PWiki/package.json</code> 直接增加了如下部分:</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">"dependencies": &#123;</span><br><span class="line">    "hexo": "^3.7.0",</span><br><span class="line">    "hexo-autonofollow": "^1.0.1",</span><br><span class="line">    "hexo-deployer-git": "^0.3.1",</span><br><span class="line">    "hexo-directory-category": "^1.0.5",</span><br><span class="line">    "hexo-generator-archive": "^0.1.5",</span><br><span class="line">    "hexo-generator-category": "^0.1.3",</span><br><span class="line">    "hexo-generator-feed": "^1.2.2",</span><br><span class="line">    "hexo-generator-index": "^0.2.1",</span><br><span class="line">    "hexo-generator-json-content": "^3.0.1",</span><br><span class="line">    "hexo-generator-sitemap": "^1.2.0",</span><br><span class="line">    "hexo-generator-tag": "^0.2.0",</span><br><span class="line">    "hexo-renderer-ejs": "^0.3.1",</span><br><span class="line">    "hexo-renderer-marked": "^0.3.2",</span><br><span class="line">    "hexo-renderer-stylus": "^0.3.3",</span><br><span class="line">    "hexo-server": "^0.3.1"</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后再使用 <code>npm install</code> 命令安装即可. 还有要注意修改主题的 <code>_config.yml</code> 文件, 将原作者的个人信息改成自己的信息.</p><h2 id="保存博客到仓库"><a href="#保存博客到仓库" class="headerlink" title="保存博客到仓库"></a>保存博客到仓库</h2><p>我们自己使用 <code>hexo new &lt;title&gt;</code> 产生的博客源文件一般是放在 <code>PWiki/source/_posts/</code> 目录下, 使用 <code>hexo generate</code> 命令产生的静态页面一般是放在 <code>PWiki/publish/</code> 文件夹下. 为了对博客的 Markdown 源文件以及博客使用的主题进行备份, 参考 Wikitten 原作者的方法, 我在 Github 上创建了一个名为 <code>Wiki-site</code> 的仓库用于存储这些源文件.</p><p>具体方法是:</p><ul><li>在 Github 上创建一个名为 <code>Wiki-site</code> 的新仓库;</li><li>在本地上的 <code>PWiki/</code> 目录下使用 <code>git init</code> 命令;</li><li>修改 <code>PWiki/</code> 项目中的 <code>.gitignore</code> 文件, 过滤掉那些不需要追踪版本的文件; 另外要注意的问题是, 由于 <code>PWiki/themes/Wikitten</code> 是个 git submodule, 在 <code>PWiki/</code> 目录下直接使用 <code>git add *</code> 之类的命令可能会引起一些 Warning, 我的做法是到 <code>PWiki/themes/Wikitten/</code> 目录下先用 <code>git add/commit</code> 等命令处理好后, 再回到 <code>PWiki/</code> 目录使用 <code>git add/commit</code> 命令;</li><li>回到 <code>PWiki/</code> 目录, 将上面的修改都 <code>git add/commit</code>;</li><li>将本地项目与远程服务器进行关联, <code>git remote add origin git@github.com:xzml/Wiki-site.git</code> (具体可以参考第 5 个博客)</li><li>执行 <code>git pull origin master</code>, 将远程服务器中的 master 分支和本地的 origin 合并, 防止冲突.</li><li>上面没有报错之后, 可以使用 <code>git status</code> 查看当前本地仓库是不是干净的, 如果是的话, 就可以使用 <code>git push -u origin master</code> 推送到 Github 上了.</li><li>上面的步骤其实已经将问题给搞定了, 这里记录一个我出现的问题: 我有多个 Github 账号, 即使设置了 <code>PWiki/</code> 的 local user 为 xzml, 在使用 <code>git push -u origin master</code> 时, 仍会使用另一个 userb. 由于我访问 Github 使用的是 SSH, 这说明访问 <a href="mailto:`git@github.com" rel="external nofollow noopener noreferrer" target="_blank">`git@github.com</a><code>时使用的是 userb, 为了使通过 SSH 访问</code><a href="mailto:git@github.com" rel="external nofollow noopener noreferrer" target="_blank">git@github.com</a><code>使用 xzml, 我直接修改</code>PWiki/.git/config<code>文件中的</code>url = xzml:xzml/Wiki-site.git<code>, 这是因为我在</code>.ssh/config<code>给通过 xzml 访问</code><a href="mailto:git@github.com" rel="external nofollow noopener noreferrer" target="_blank">git@github.com</a><code>这一行为设置了别名为</code>xzml`.</li></ul><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><blockquote><ul><li><a href="http://lijiankun24.com/Mac%E4%B8%8BHexo%E5%92%8CGitHub-Pages%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A21/" rel="external nofollow noopener noreferrer" target="_blank">Mac 下 Hexo 和 GitHub-Pages 搭建个人博客（一）</a></li><li><a href="http://lijiankun24.com/Mac%E4%B8%8BHexo%E5%92%8CGitHub-Pages%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A22/" rel="external nofollow noopener noreferrer" target="_blank">Mac 下 Hexo 和 GitHub-Pages 搭建个人博客（二）</a></li><li><a href="https://www.jianshu.com/p/1519f22aff24" rel="external nofollow noopener noreferrer" target="_blank">macOS环境下利用Github和Hexo部署博客</a></li><li><a href="https://blog.zthxxx.me/posts/Hexo-Build-Static-Blog-Process/" rel="external nofollow noopener noreferrer" target="_blank">使用 Hexo 生成静态博客过程记录</a></li><li><a href="https://blog.csdn.net/CHENYUFENG1991/article/details/48930471" rel="external nofollow noopener noreferrer" target="_blank">使用Git命令把本地项目上传到Github托管</a></li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;准备工作&quot;&gt;&lt;a href=&quot;#准备工作&quot; class=&quot;headerlink&quot; title=&quot;准备工作&quot;&gt;&lt;/a&gt;准备工作&lt;/h2&gt;&lt;p&gt;建议看看参考博客中的第一个, 图文并茂, 可以感受到很多细节, 作者非常用心, 第二个参考博客是更新奇的内容, 包括插入图片
      
    
    </summary>
    
      <category term="某些Tricks" scheme="http://yoursite.com/categories/%E6%9F%90%E4%BA%9BTricks/"/>
    
    
      <category term="Tricks" scheme="http://yoursite.com/tags/Tricks/"/>
    
  </entry>
  
  <entry>
    <title>关于Wiki的主题</title>
    <link href="http://yoursite.com/wiki/%E6%9F%90%E4%BA%9BTricks/%E5%85%B3%E4%BA%8EWiki%E7%9A%84%E4%B8%BB%E9%A2%98/"/>
    <id>http://yoursite.com/wiki/某些Tricks/关于Wiki的主题/</id>
    <published>2018-11-25T14:35:41.000Z</published>
    <updated>2018-11-25T14:55:33.648Z</updated>
    
    <content type="html"><![CDATA[<h2 id="不可思议的-Tricks"><a href="#不可思议的-Tricks" class="headerlink" title="不可思议的 Tricks"></a>不可思议的 Tricks</h2><p>比如使用 Markdown 中的列表, 像如下代码是不会显示列表前面的点 $\bullet$:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">+ </span><span class="code">`a`</span> 是一个数组</span><br></pre></td></tr></table></figure><p>效果如下:</p><ul><li><code>a</code> 是一个数组</li></ul><p>需要写成:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">+ </span>参数 <span class="code">`a`</span> 是一个数组.</span><br></pre></td></tr></table></figure><p>才能得到想要的效果:</p><ul><li>参数 <code>a</code> 是一个数组.</li></ul><h2 id="修改-Wikitten-模板的属性"><a href="#修改-Wikitten-模板的属性" class="headerlink" title="修改 Wikitten 模板的属性"></a>修改 Wikitten 模板的属性</h2><h3 id="修改字体"><a href="#修改字体" class="headerlink" title="修改字体"></a>修改字体</h3><p>可以去 <code>themes/Wikitten/source/css</code> 目录下, 查看 <code>style.styl</code> 文件, 发现其中还会导入 <code>_variables.styl</code> 文件, 只需要修改该文件中的相关属性即可.</p><h3 id="修改代码使用的主题"><a href="#修改代码使用的主题" class="headerlink" title="修改代码使用的主题"></a>修改代码使用的主题</h3><p>当前我使用的代码主题 (配色) 是 <code>solarized-light</code>, 要查看其它的配色, 可以看 <code>themes/Wikitten/source/css/_highlight</code> 目录, 里面有大量的配色文件, 这些文件的文件名就是某种主题, 只需要将文件名填入 <code>themes/Wikitten/_config.yml</code> 中的 <code>highlight</code> 项目下即可. 比如:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">highlight: solarized-dark <span class="comment"># monakai</span></span><br></pre></td></tr></table></figure><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>参考资料中有 Wikitten 主题的地址, 以及原作者写的关于使用 Hexo 搭建个人 Wiki 的博客.</p><blockquote><ul><li><a href="https://www.v2ex.com/t/347176?p=2" rel="external nofollow noopener noreferrer" target="_blank">使用 Hexo 做个人 Wiki 知识管理系统</a></li><li><a href="https://wiki.zthxxx.me/" rel="external nofollow noopener noreferrer" target="_blank">作者的个人 Wiki 地址</a></li><li><a href="https://github.com/zthxxx/hexo-theme-Wikitten" rel="external nofollow noopener noreferrer" target="_blank">Wikitten 主题地址</a></li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;不可思议的-Tricks&quot;&gt;&lt;a href=&quot;#不可思议的-Tricks&quot; class=&quot;headerlink&quot; title=&quot;不可思议的 Tricks&quot;&gt;&lt;/a&gt;不可思议的 Tricks&lt;/h2&gt;&lt;p&gt;比如使用 Markdown 中的列表, 像如下代码是不会显示
      
    
    </summary>
    
      <category term="某些Tricks" scheme="http://yoursite.com/categories/%E6%9F%90%E4%BA%9BTricks/"/>
    
    
      <category term="Tricks" scheme="http://yoursite.com/tags/Tricks/"/>
    
  </entry>
  
  <entry>
    <title>numpy中的random函数</title>
    <link href="http://yoursite.com/wiki/%E7%A8%8B%E5%BA%8F%E8%AF%AD%E8%A8%80/Python/Numpy/numpy%E4%B8%AD%E7%9A%84random%E5%87%BD%E6%95%B0/"/>
    <id>http://yoursite.com/wiki/程序语言/Python/Numpy/numpy中的random函数/</id>
    <published>2018-11-25T11:41:45.000Z</published>
    <updated>2018-11-25T14:32:48.792Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Random-Data"><a href="#Random-Data" class="headerlink" title="Random Data"></a>Random Data</h2><h3 id="np-random-rand"><a href="#np-random-rand" class="headerlink" title="np.random.rand"></a>np.random.rand</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.random.rand(d0, d1, ..., dn)</span><br></pre></td></tr></table></figure><p>rand 函数根据给定的维度产生 $[0, 1)$ 之间的随机数, 服从均匀分布 (uniform distribution)</p><h3 id="np-random-randn"><a href="#np-random-randn" class="headerlink" title="np.random.randn"></a>np.random.randn</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.random.randn(d0, d1, ..., dn)</span><br></pre></td></tr></table></figure><p>randn 函数返回服从标准正态分布 ($\mathcal{N}(0, 1)$) 的随机数, 要返回服从 $\mathcal{N}(\mu, \sigma)$ 的样本, 使用 $\mu * \text{np.random.randn(…)} + \sigma$.</p><h3 id="np-random-randint"><a href="#np-random-randint" class="headerlink" title="np.random.randint"></a>np.random.randint</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.random.randint(low[, high, size, type])</span><br></pre></td></tr></table></figure><p>返回 $[low, high)$ 范围内的随机整数, 当 <code>high</code> 没有填写时, 默认产生 $[0, low)$ 范围内的随机整数. 默认类型为 <code>np.int</code>.</p><h3 id="np-random-random-integers"><a href="#np-random-random-integers" class="headerlink" title="np.random.random_integers"></a>np.random.random_integers</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.random.random_integers(low[, high, size])</span><br></pre></td></tr></table></figure><p>返回 $[low, high]$ 范围内的随机整数, 当 <code>high</code> 没有填写时, 默认生成随机数的范围为 $[1, low]$. 该函数在新版本的 numpy 中已被替代, 建议使用 <code>randint</code> 函数.</p><h3 id="生成-0-1-区间的浮点数"><a href="#生成-0-1-区间的浮点数" class="headerlink" title="生成 [0, 1) 区间的浮点数"></a>生成 [0, 1) 区间的浮点数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">np.random.random(size=<span class="keyword">None</span>)</span><br><span class="line">np.random.sample(size=<span class="keyword">None</span>)</span><br><span class="line">np.random.ranf(size=<span class="keyword">None</span>)</span><br><span class="line">np.random.random_sample(size=<span class="keyword">None</span>)</span><br></pre></td></tr></table></figure><p>以上四个函数都是返回 $[0.0, 1.0)$ 范围内的随机浮点数. 如果要产生服从 $\text{Unif}(b, a), b &gt; a$ 分布的浮点数, 可以使用 $(b - a) * \text{random_sample()} + a$.</p><h3 id="np-random-choice"><a href="#np-random-choice" class="headerlink" title="np.random.choice"></a>np.random.choice</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.random.choice(a, size=<span class="keyword">None</span>, replace=<span class="keyword">True</span>, p=<span class="keyword">None</span>)</span><br></pre></td></tr></table></figure><p>从给定的 <strong>一维</strong> 数组中随机选取一个样本</p><ul><li>参数 <code>a</code> 是整数时, 相当于 <code>np.arange(a)</code>.</li><li><code>size</code> 为返回数组的大小, 用 tuple 表示.</li><li>参数 <code>p</code> 表示数组中数据出现的概率, 数组之和应该为 1, 并且大小要和 <code>a</code> 一样大.</li><li><code>replace=False</code> 时, 生成的随机数不能有重复的数值, 这是一个测试</li></ul><p>例如:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>np.random.choice(<span class="number">5</span>, size=(<span class="number">3</span>,), replace=<span class="keyword">False</span>)</span><br><span class="line">array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">0</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>np.random.choice(<span class="number">5</span>, size=(<span class="number">6</span>,), replace=<span class="keyword">False</span>)</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"&lt;stdin&gt;"</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">  File <span class="string">"mtrand.pyx"</span>, line <span class="number">1166</span>, <span class="keyword">in</span> mtrand.RandomState.choice</span><br><span class="line">ValueError: Cannot take a larger sample than population when <span class="string">'replace=False'</span></span><br></pre></td></tr></table></figure><h2 id="Permutations"><a href="#Permutations" class="headerlink" title="Permutations"></a>Permutations</h2><h3 id="np-random-permutation"><a href="#np-random-permutation" class="headerlink" title="np.random.permutation"></a>np.random.permutation</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.random.permutation(x)</span><br></pre></td></tr></table></figure><p>对序列进行随机的非原地排列 (即不是 in-place 的, 会对序列进行拷贝). 如果序列是多维数组, 那么只会沿着第一个 index 进行随机排列.</p><ul><li>参数 <code>x</code> 如果是个整数, 那么相当于对 <code>np.arange(x)</code> 进行随机排列.</li><li>考虑多维数组的情况, 见下面的例子:</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = np.arange(<span class="number">9</span>).reshape(<span class="number">3</span>, <span class="number">3</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>np.random.permutation(a)</span><br><span class="line">array([[<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>],</span><br><span class="line">       [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>],</span><br><span class="line">       [<span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>]])</span><br></pre></td></tr></table></figure><h2 id="np-random-shuffle"><a href="#np-random-shuffle" class="headerlink" title="np.random.shuffle"></a>np.random.shuffle</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.random.shuffle()</span><br></pre></td></tr></table></figure><p>对数组/list 进行原地 shuffle. 注意这个函数直接修改数组, 返回 <code>None</code>. 对于多维数组, 只会沿着第一个 index 进行 shuffle.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">array([[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>],</span><br><span class="line">       [<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>],</span><br><span class="line">       [<span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>]])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>np.random.shuffle(a)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">array([[<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>],</span><br><span class="line">       [<span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>],</span><br><span class="line">       [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>]])</span><br></pre></td></tr></table></figure><h2 id="Distributions"><a href="#Distributions" class="headerlink" title="Distributions"></a>Distributions</h2><h3 id="np-random-normal"><a href="#np-random-normal" class="headerlink" title="np.random.normal"></a>np.random.normal</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.random.normal(loc=<span class="number">0.0</span>, scale=<span class="number">1.0</span>, size=<span class="keyword">None</span>)</span><br></pre></td></tr></table></figure><p>对正态 (高斯) 分布进行采样.</p><p>$$p ( x ) = \frac { 1 } { \sqrt { 2 \pi \sigma ^ { 2 } } } e ^ { - \frac { ( x - \mu ) ^ { 2 } } { 2 \sigma ^ { 2 } } }$$</p><p>其中 $\mu$ 称为 mean, 而 $\sigma$ 称为 standard deviation, $\sigma^2$ 被称为 variance.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>mu, sigma = <span class="number">0</span>, <span class="number">0.1</span> <span class="comment"># mean and standard deviation</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s = np.random.normal(mu, sigma, <span class="number">1000</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>abs(mu - np.mean(s)) &lt; <span class="number">0.01</span></span><br><span class="line"><span class="keyword">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>abs(sigma - np.std(s, ddof=<span class="number">1</span>)) &lt; <span class="number">0.01</span></span><br><span class="line"><span class="keyword">True</span></span><br></pre></td></tr></table></figure><h3 id="np-random-uniform"><a href="#np-random-uniform" class="headerlink" title="np.random.uniform"></a>np.random.uniform</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.random.uniform(low=<span class="number">0.0</span>, high=<span class="number">1.0</span>, size=<span class="keyword">None</span>)</span><br></pre></td></tr></table></figure><p>对均匀分布进行采样. <code>low</code> 和 <code>size</code> 是可选的.</p><h2 id="Random-Generator"><a href="#Random-Generator" class="headerlink" title="Random Generator"></a>Random Generator</h2><h3 id="np-random-seed"><a href="#np-random-seed" class="headerlink" title="np.random.seed"></a>np.random.seed</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.random.seed(seed=<span class="keyword">None</span>)</span><br></pre></td></tr></table></figure><p>设置随机种子, 使结果可重复.</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><blockquote><ul><li><a href="https://www.jianshu.com/p/214798dd8f93" rel="external nofollow noopener noreferrer" target="_blank">为什么你用不好Numpy的random函数?</a></li><li><a href="https://docs.scipy.org/doc/numpy-1.15.1/reference/routines.random.html" rel="external nofollow noopener noreferrer" target="_blank">Random sampling (numpy.random)</a></li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Random-Data&quot;&gt;&lt;a href=&quot;#Random-Data&quot; class=&quot;headerlink&quot; title=&quot;Random Data&quot;&gt;&lt;/a&gt;Random Data&lt;/h2&gt;&lt;h3 id=&quot;np-random-rand&quot;&gt;&lt;a href=&quot;#np-
      
    
    </summary>
    
      <category term="程序语言" scheme="http://yoursite.com/categories/%E7%A8%8B%E5%BA%8F%E8%AF%AD%E8%A8%80/"/>
    
      <category term="Python" scheme="http://yoursite.com/categories/%E7%A8%8B%E5%BA%8F%E8%AF%AD%E8%A8%80/Python/"/>
    
      <category term="Numpy" scheme="http://yoursite.com/categories/%E7%A8%8B%E5%BA%8F%E8%AF%AD%E8%A8%80/Python/Numpy/"/>
    
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
      <category term="Numpy" scheme="http://yoursite.com/tags/Numpy/"/>
    
  </entry>
  
</feed>
